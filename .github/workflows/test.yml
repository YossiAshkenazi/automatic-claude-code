name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  # Unit and Integration Tests
  test:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: dual_agent_monitor_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd dual-agent-monitor
        npm ci

    - name: Setup test database
      run: |
        cd dual-agent-monitor
        NODE_ENV=test npm run db:test:setup
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/dual_agent_monitor_test

    - name: Run type checking
      run: |
        cd dual-agent-monitor
        npm run typecheck

    - name: Run linting
      run: |
        cd dual-agent-monitor
        npm run lint

    - name: Run unit tests
      run: |
        cd dual-agent-monitor
        npm run test:unit
      env:
        NODE_ENV: test

    - name: Run integration tests
      run: |
        cd dual-agent-monitor
        npm run test:integration
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/dual_agent_monitor_test

    - name: Generate coverage report
      run: |
        cd dual-agent-monitor
        npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./dual-agent-monitor/coverage/lcov.info
        directory: ./dual-agent-monitor
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  # End-to-End Tests
  e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd dual-agent-monitor
        npm ci

    - name: Install Playwright browsers
      run: |
        cd dual-agent-monitor
        npx playwright install --with-deps

    - name: Build application
      run: |
        cd dual-agent-monitor
        npm run build

    - name: Run Playwright tests
      run: |
        cd dual-agent-monitor
        npm run test:e2e
      env:
        NODE_ENV: test

    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: dual-agent-monitor/playwright-report/
        retention-days: 30

  # Performance Tests
  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd dual-agent-monitor
        npm ci

    - name: Install k6
      run: |
        sudo gpg -k
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6

    - name: Build and start application
      run: |
        cd dual-agent-monitor
        npm run build
        npm start &
        sleep 30  # Wait for server to start

    - name: Run performance tests
      run: |
        cd dual-agent-monitor
        npm run test:performance

    - name: Upload performance results
      uses: actions/upload-artifact@v4
      with:
        name: performance-results
        path: dual-agent-monitor/performance-results/
        retention-days: 30

  # Security Tests
  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd dual-agent-monitor
        npm ci

    - name: Run security audit
      run: |
        cd dual-agent-monitor
        npm run test:security

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --file=dual-agent-monitor/package.json

    - name: Upload Snyk results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: snyk.sarif

  # Build validation
  build:
    name: Build Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd dual-agent-monitor
        npm ci

    - name: Build application
      run: |
        cd dual-agent-monitor
        npm run build:validate

    - name: Check build size
      run: |
        cd dual-agent-monitor
        npm run build
        # Check if build artifacts are within reasonable size limits
        find dist -name "*.js" -size +5M -exec echo "Warning: Large JS file: {}" \;
        find dist -name "*.css" -size +1M -exec echo "Warning: Large CSS file: {}" \;

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dual-agent-monitor/dist/
        retention-days: 7