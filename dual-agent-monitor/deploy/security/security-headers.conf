# Security Headers Configuration for Nginx
# Include this file in your nginx server blocks for enhanced security

# Strict Transport Security (HSTS)
# Enforces HTTPS connections for the specified duration
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# X-Frame-Options
# Prevents clickjacking attacks by controlling iframe embedding
add_header X-Frame-Options "SAMEORIGIN" always;

# X-Content-Type-Options
# Prevents MIME type sniffing attacks
add_header X-Content-Type-Options "nosniff" always;

# X-XSS-Protection
# Enables browser XSS filtering (legacy, but still useful for older browsers)
add_header X-XSS-Protection "1; mode=block" always;

# Referrer Policy
# Controls referrer information sent with requests
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Content Security Policy (CSP)
# Comprehensive CSP for the Dual Agent Monitor application
add_header Content-Security-Policy "
    default-src 'self';
    script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com;
    style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net;
    font-src 'self' https://fonts.gstatic.com https://cdn.jsdelivr.net;
    img-src 'self' data: https: blob:;
    connect-src 'self' wss: ws: https://api.github.com;
    media-src 'self';
    object-src 'none';
    frame-src 'self';
    base-uri 'self';
    form-action 'self';
    frame-ancestors 'self';
    manifest-src 'self';
    worker-src 'self' blob:;
    child-src 'self' blob:;
" always;

# Permissions Policy (Feature Policy)
# Controls browser features and APIs
add_header Permissions-Policy "
    geolocation=(),
    microphone=(),
    camera=(),
    payment=(),
    usb=(),
    magnetometer=(),
    gyroscope=(),
    speaker=(self),
    vibrate=(),
    fullscreen=(self),
    sync-xhr=()
" always;

# Cross-Origin Embedder Policy
# Enables cross-origin isolation
add_header Cross-Origin-Embedder-Policy "require-corp" always;

# Cross-Origin Opener Policy
# Protects against certain cross-origin attacks
add_header Cross-Origin-Opener-Policy "same-origin" always;

# Cross-Origin Resource Policy
# Controls cross-origin access to resources
add_header Cross-Origin-Resource-Policy "same-origin" always;

# Server Information Hiding
# Remove or modify server information
server_tokens off;
more_clear_headers Server;
more_set_headers "Server: DualAgentMonitor";

# Additional security measures for specific file types
location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    # Cache static assets
    expires 1y;
    add_header Cache-Control "public, immutable";
    
    # Security headers for static assets
    add_header X-Content-Type-Options "nosniff" always;
    add_header Cross-Origin-Resource-Policy "cross-origin" always;
}

# Prevent access to sensitive files
location ~* \.(env|log|ini|conf|bak|old|tmp|temp)$ {
    deny all;
    return 404;
}

# Prevent access to hidden files
location ~ /\. {
    deny all;
    return 404;
}

# Prevent access to backup files
location ~* ~$ {
    deny all;
    return 404;
}

# Rate limiting for API endpoints
location /api/ {
    limit_req zone=api burst=20 nodelay;
    limit_req_status 429;
}

# Strict rate limiting for authentication endpoints
location /api/auth/ {
    limit_req zone=auth burst=5 nodelay;
    limit_req_status 429;
}

# Block common attack patterns
location ~* (eval\(|javascript:|vbscript:|onload=|onerror=) {
    deny all;
    return 403;
}

# Block SQL injection attempts
location ~* (union.*select|select.*from|insert.*into|delete.*from|drop.*table) {
    deny all;
    return 403;
}

# Block file inclusion attempts
location ~* (\.\.\/|\.\.\\|etc\/passwd|etc\/shadow) {
    deny all;
    return 403;
}

# Security headers for WebSocket connections
location /ws {
    # Allow WebSocket upgrade
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
}

# Monitoring and health check endpoints
location = /health {
    access_log off;
    add_header Content-Type "text/plain";
    return 200 "healthy\n";
}

location = /robots.txt {
    access_log off;
    add_header Content-Type "text/plain";
    return 200 "User-agent: *\nDisallow: /api/\nDisallow: /admin/\n";
}

# Security.txt for vulnerability disclosure
location = /.well-known/security.txt {
    access_log off;
    add_header Content-Type "text/plain";
    return 200 "Contact: security@yourdomain.com\nExpires: 2025-12-31T23:59:59.000Z\nEncryption: https://yourdomain.com/pgp-key.txt\nPreferred-Languages: en\nCanonical: https://yourdomain.com/.well-known/security.txt\n";
}