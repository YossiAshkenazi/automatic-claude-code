# nginx configuration for dual-agent monitoring API server
upstream api_backend {
    server api-server:4005 max_fails=3 fail_timeout=30s;
    # Add additional API server instances here for load balancing:
    # server api-server-2:4005 max_fails=3 fail_timeout=30s;
    # server api-server-3:4005 max_fails=3 fail_timeout=30s;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=ws_limit:10m rate=5r/s;

# WebSocket upgrade map
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    server_name api.dual-agent-monitor.local localhost;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Request size limits
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    
    # Timeouts
    client_body_timeout 10s;
    client_header_timeout 10s;
    keepalive_timeout 15s;
    send_timeout 10s;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        text/css
        text/javascript
        text/plain
        application/xml;
    
    # Health check endpoint (bypass rate limiting)
    location /api/health {
        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Health check specific timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        access_log off;
    }
    
    # WebSocket connections (with rate limiting)
    location /ws {
        limit_req zone=ws_limit burst=20 nodelay;
        
        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_connect_timeout 7s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Disable buffering for real-time communication
        proxy_buffering off;
        proxy_cache off;
    }
    
    # API endpoints (with rate limiting)
    location /api/ {
        limit_req zone=api_limit burst=50 nodelay;
        
        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Standard timeouts for API requests
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Enable buffering for better performance
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Block common attack patterns
    location ~* \.(bat|exe|cmd|sh|php|pl|cgi)$ {
        deny all;
    }
    
    # Block hidden files
    location ~ /\. {
        deny all;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        return 404 'API endpoint not found';
        add_header Content-Type text/plain;
    }
    
    location = /50x.html {
        return 500 'Internal server error';
        add_header Content-Type text/plain;
    }
    
    # Logging
    access_log /var/log/nginx/api_access.log combined;
    error_log /var/log/nginx/api_error.log warn;
}

# SSL/HTTPS configuration (optional - uncomment and configure certificates)
# server {
#     listen 443 ssl http2;
#     server_name api.dual-agent-monitor.local;
#     
#     ssl_certificate /etc/nginx/ssl/api.dual-agent-monitor.local.crt;
#     ssl_certificate_key /etc/nginx/ssl/api.dual-agent-monitor.local.key;
#     
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # HSTS (optional)
#     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
#     
#     # Include the same location blocks as HTTP server
#     include /etc/nginx/conf.d/common-locations.conf;
# }