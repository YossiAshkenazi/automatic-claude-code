{
  "name": "automatic-claude-code",
  "version": "2.1.0",
  "description": "Automated loop runner for Claude Code - enables continuous AI-assisted development",
  "main": "dist/index.js",
  "bin": {
    "automatic-claude-code": "./dist/index.js",
    "acc": "./dist/index.js"
  },
  "scripts": {
    "build": "tsc",
    "dev": "tsx src/index.ts",
    "start": "node dist/index.js",
    
    "_comment_1": "=== INTEGRATED DEVELOPMENT ENVIRONMENT ===",
    "dev:platform": "concurrently \"pnpm run dev:dashboard\" \"pnpm run dev:python\" \"pnpm run dev:hooks\" --names \"🎨 Dashboard,🐍 Python,🪝 Hooks\" --prefix-colors \"cyan,green,yellow\"",
    "dev:platform:clean": "pnpm run clean:all && pnpm run dev:platform",
    "dev:platform:debug": "concurrently \"pnpm run dev:dashboard:debug\" \"pnpm run dev:python:debug\" \"pnpm run dev:hooks\" --names \"🎨 Dashboard,🐍 Python,🪝 Hooks\" --prefix-colors \"cyan,green,yellow\"",
    
    "_comment_2": "=== COMPONENT DEVELOPMENT ===",
    "dev:dashboard": "cd dual-agent-monitor && pnpm run dev",
    "dev:dashboard:debug": "cd dual-agent-monitor && cross-env NODE_ENV=development DEBUG=* pnpm run dev",
    "dev:python": "cd python-sdk && python -c \"import claude_cli_wrapper; print('Python SDK ready')\" && python -m http.server 8080 --directory .",
    "dev:python:debug": "cd python-sdk && cross-env PYTHONPATH=. python -m pdb claude_cli_wrapper.py",
    "dev:hooks": "powershell -ExecutionPolicy Bypass -WindowStyle Hidden -File scripts/start-hooks-dev.ps1",
    
    "_comment_3": "=== BUILD SYSTEM ===",
    "build:all": "concurrently \"pnpm run build\" \"pnpm run build:dashboard\" \"pnpm run build:python\" --names \"🔧 CLI,🎨 Dashboard,🐍 Python\"",
    "build:dashboard": "cd dual-agent-monitor && pnpm run build",
    "build:python": "cd python-sdk && python setup.py build",
    "build:validate": "pnpm run build:all && pnpm run typecheck:all && pnpm run lint:all",
    
    "_comment_4": "=== QUALITY ASSURANCE ===",
    "test": "jest",
    "test:all": "concurrently \"pnpm run test\" \"pnpm run test:dashboard\" \"pnpm run test:python\" --names \"🔧 CLI,🎨 Dashboard,🐍 Python\"",
    "test:dashboard": "cd dual-agent-monitor && pnpm run test",
    "test:python": "cd python-sdk && python -m pytest",
    "test:integration": "jest --config jest.config.integration.js && cd dual-agent-monitor && pnpm run test:integration",
    "test:e2e": "jest --config jest.config.e2e.js && cd dual-agent-monitor && pnpm run test:e2e",
    "test:load": "jest --config jest.config.load.js",
    "test:all:parallel": "node tests/support/test-runner.js --parallel",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:coverage:all": "concurrently \"pnpm run test:coverage\" \"cd dual-agent-monitor && pnpm run test:coverage\" \"cd python-sdk && python -m pytest --cov\"",
    "test:validate": "node tests/support/test-runner.js --skip-load --skip-e2e",
    
    "_comment_5": "=== CODE QUALITY ===",
    "lint": "eslint src/**/*.ts",
    "lint:all": "concurrently \"pnpm run lint\" \"cd dual-agent-monitor && pnpm run lint\" \"cd python-sdk && flake8 .\" --names \"🔧 CLI,🎨 Dashboard,🐍 Python\"",
    "lint:fix": "eslint src/**/*.ts --fix && cd dual-agent-monitor && pnpm run lint:fix && cd ../python-sdk && black . && isort .",
    "typecheck": "tsc --noEmit",
    "typecheck:all": "concurrently \"pnpm run typecheck\" \"cd dual-agent-monitor && pnpm run typecheck\" --names \"🔧 CLI,🎨 Dashboard\"",
    
    "_comment_6": "=== UTILITY SCRIPTS ===",
    "clean": "rimraf dist",
    "clean:all": "concurrently \"pnpm run clean\" \"cd dual-agent-monitor && rimraf dist\" \"cd python-sdk && rimraf build dist *.egg-info\" --names \"🔧 CLI,🎨 Dashboard,🐍 Python\"",
    "setup:dev": "pnpm install && cd dual-agent-monitor && pnpm install && cd ../python-sdk && pip install -r requirements.txt && pip install -r requirements-dev.txt",
    "setup:env": "powershell -ExecutionPolicy Bypass -File scripts/setup-dev-environment.ps1",
    "setup:complete": "pnpm run setup:dev && pnpm run setup:env && pnpm run build:all",
    
    "_comment_7": "=== DEBUGGING ===",
    "debug:cli": "node --inspect-brk=9229 dist/index.js",
    "debug:dashboard": "cd dual-agent-monitor && cross-env NODE_OPTIONS=\"--inspect=9230\" pnpm run dev",
    "debug:python": "cd python-sdk && python -m pdb claude_cli_wrapper.py",
    "debug:all": "concurrently \"pnpm run debug:cli\" \"pnpm run debug:dashboard\" \"pnpm run debug:python\" --names \"🔧 CLI,🎨 Dashboard,🐍 Python\"",
    
    "_comment_8": "=== PRODUCTION BUILDS ===",
    "prebuild": "pnpm run clean",
    "prepublishOnly": "pnpm run build",
    "predeploy": "pnpm run test:all && pnpm run build:validate",
    
    "_comment_9": "=== DOCKER INTEGRATION ===",
    "docker:build": "docker build -t automatic-claude-code .",
    "docker:build-dev": "docker build --target development -t automatic-claude-code:dev .",
    "docker:run": "docker run -it --rm -v \"$(pwd):/workspace:ro\" -v \"$HOME/.claude:/home/nodejs/.claude:ro\" automatic-claude-code",
    "docker:shell": "docker run -it --rm -v \"$(pwd):/workspace\" -v \"$HOME/.claude:/home/nodejs/.claude:ro\" --entrypoint /bin/sh automatic-claude-code",
    "docker:dev": "docker-compose up --build",
    "docker:dev-platform": "docker-compose -f docker-compose.dev.yml up --build",
    "docker:dev-app": "docker-compose --profile app up --build",
    "docker:dev-monitoring": "docker-compose --profile monitoring up --build",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up -d --build",
    "docker:prod-full": "docker-compose -f docker-compose.prod.yml --profile nginx up -d --build",
    "docker:stop": "docker-compose down",
    "docker:stop-prod": "docker-compose -f docker-compose.prod.yml down",
    "docker:logs": "docker-compose logs -f",
    "docker:logs-app": "docker-compose logs -f acc-app",
    "docker:backup": "docker-compose -f docker-compose.prod.yml --profile backup up backup",
    "docker:clean": "docker system prune -f && docker volume prune -f",
    
    "_comment_10": "=== MONITORING & OBSERVABILITY ===",
    "monitor:start": "node config/monitoring/monitoring-server.js",
    "monitor:persistent": "powershell -ExecutionPolicy Bypass -File start-monitoring.ps1",
    "monitor:docker": "docker-compose up -d postgres redis",
    "monitor:status": "curl -s http://localhost:6007/health | json_pp || echo 'Monitor not running'",
    "monitor:pm2": "pm2 start config/production/ecosystem.config.js",
    "monitor:pm2-stop": "pm2 stop acc-monitoring",
    "monitor:pm2-restart": "pm2 restart acc-monitoring",
    "monitor:pm2-logs": "pm2 logs acc-monitoring",
    "monitor:pm2-status": "pm2 list",
    
    "_comment_11": "=== SDK MANAGEMENT ===",
    "sdk:types": "tsc --declaration --emitDeclarationOnly --outDir types",
    "sdk:validate": "node -e \"require('@anthropic-ai/claude-code'); console.log('SDK validation passed')\"",
    "postinstall": "pnpm run sdk:validate || echo 'SDK validation skipped'"
  },
  "keywords": [
    "claude",
    "claude-code",
    "ai",
    "automation",
    "development",
    "cli",
    "wsl"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "@anthropic-ai/claude-code": "^1.0.98",
    "@anthropic-ai/sdk": "^0.60.0",
    "blessed": "^0.1.81",
    "blessed-contrib": "^4.11.0",
    "boxen": "^8.0.1",
    "chalk": "^5.3.0",
    "cli-highlight": "^2.1.11",
    "cli-progress": "^3.12.0",
    "cli-table3": "^0.6.5",
    "commander": "^12.0.0",
    "ora": "^8.2.0",
    "strip-ansi": "^7.1.0"
  },
  "devDependencies": {
    "@types/blessed": "^0.1.25",
    "@types/cli-progress": "^3.11.6",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.11.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "concurrently": "^8.2.1",
    "cross-env": "^7.0.3",
    "eslint": "^9.0.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.1.2",
    "tsx": "^4.7.0",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/automatic-claude-code.git"
  }
}
