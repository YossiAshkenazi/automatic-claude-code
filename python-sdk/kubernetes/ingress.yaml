apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: claude-sdk-ingress
  namespace: default
  labels:
    app: claude-sdk
    component: python-sdk
  annotations:
    # NGINX Ingress Controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-burst: "50"
    
    # CORS support
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
    
    # WebSocket support for dashboard
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location /ws {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
      }

spec:
  tls:
  - hosts:
    - claude-sdk.example.com
    - claude-api.example.com
    secretName: claude-sdk-tls
  
  rules:
  # Dashboard ingress
  - host: claude-sdk.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: claude-sdk-service
            port:
              number: 6011
  
  # API ingress  
  - host: claude-api.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: claude-sdk-service
            port:
              number: 4005
      - path: /health
        pathType: Exact
        backend:
          service:
            name: claude-sdk-service
            port:
              number: 4005

---
# TLS Certificate (Let's Encrypt with cert-manager)
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: claude-sdk-cert
  namespace: default
spec:
  secretName: claude-sdk-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - claude-sdk.example.com
  - claude-api.example.com

---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: claude-sdk-netpol
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: claude-sdk
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow ingress from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 6011
    - protocol: TCP
      port: 4005
  
  # Allow ingress within namespace
  - from:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 6011
    - protocol: TCP
      port: 4005
  
  egress:
  # Allow egress to DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
  
  # Allow egress to internet (for Claude API)
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
  
  # Allow egress within cluster
  - to:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 1-65535