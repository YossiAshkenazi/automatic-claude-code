{
  "unit": {
    "type": "unit",
    "success": false,
    "code": 1,
    "output": "",
    "errorOutput": "npm warn Unknown env config \"global-bin-dir\". This will stop working in the next major version of npm.\nnpm warn Unknown env config \"node-linker\". This will stop working in the next major version of npm.\nnpm warn Unknown env config \"overrides\". This will stop working in the next major version of npm.\nnpm warn Unknown env config \"verify-deps-before-run\". This will stop working in the next major version of npm.\nnpm warn Unknown env config \"_jsr-registry\". This will stop working in the next major version of npm.\nFAIL tests/unit/sdkClaudeExecutor.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/sdkClaudeExecutor.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../logger' or its corresponding type declarations.\n\n    \u001b[7m6\u001b[0m import { Logger } from '../../logger';\n    \u001b[7m \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sdkClaudeExecutor.test.ts\u001b[0m:\u001b[93m16\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../services/sdkClaudeExecutor' or its corresponding type declarations.\n\n    \u001b[7m16\u001b[0m } from '../../services/sdkClaudeExecutor';\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sdkClaudeExecutor.test.ts\u001b[0m:\u001b[93m17\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../types' or its corresponding type declarations.\n\n    \u001b[7m17\u001b[0m import { SDKResult } from '../../types';\n    \u001b[7m  \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sdkClaudeExecutor.test.ts\u001b[0m:\u001b[93m95\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'path' implicitly has an 'any' type.\n\n    \u001b[7m95\u001b[0m       fs.existsSync.mockImplementation((path) => {\n    \u001b[7m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\nFAIL tests/unit/SimplifiedSessionManager.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/SimplifiedSessionManager.test.ts\u001b[0m:\u001b[93m10\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../logger' or its corresponding type declarations.\n\n    \u001b[7m10\u001b[0m import { Logger } from '../../logger';\n    \u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/SimplifiedSessionManager.test.ts\u001b[0m:\u001b[93m17\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../core/SimplifiedSessionManager' or its corresponding type declarations.\n\n    \u001b[7m17\u001b[0m } from '../../core/SimplifiedSessionManager';\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/SimplifiedSessionManager.test.ts\u001b[0m:\u001b[93m18\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../outputParser' or its corresponding type declarations.\n\n    \u001b[7m18\u001b[0m import { ParsedOutput } from '../../outputParser';\n    \u001b[7m  \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/unit/claudeCodeController.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/claudeCodeController.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../controllers/claudeCodeController' or its corresponding type declarations.\n\n    \u001b[7m8\u001b[0m import { ClaudeCodeController, ClaudeCodeControllerOptions } from '../../controllers/claudeCodeController';\n    \u001b[7m \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/unit/streamJsonParser.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/streamJsonParser.test.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../outputParser' or its corresponding type declarations.\n\n    \u001b[7m1\u001b[0m import { StreamJsonParser } from '../outputParser';\n    \u001b[7m \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/streamJsonParser.test.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'e' implicitly has an 'any' type.\n\n    \u001b[7m204\u001b[0m       expect(errors.some(e => e.includes('Cannot access file'))).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                         ~\u001b[0m\n    \u001b[96mtests/unit/streamJsonParser.test.ts\u001b[0m:\u001b[93m205\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'e' implicitly has an 'any' type.\n\n    \u001b[7m205\u001b[0m       expect(errors.some(e => e.includes('Permission denied'))).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                         ~\u001b[0m\n\nFAIL tests/unit/TaskCompletionAnalyzer.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../logger' or its corresponding type declarations.\n\n    \u001b[7m6\u001b[0m import { Logger } from '../../logger';\n    \u001b[7m \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../core/TaskCompletionAnalyzer' or its corresponding type declarations.\n\n    \u001b[7m7\u001b[0m import { TaskCompletionAnalyzer } from '../../core/TaskCompletionAnalyzer';\n    \u001b[7m \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../types' or its corresponding type declarations.\n\n    \u001b[7m15\u001b[0m } from '../../types';\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m74\u001b[0m       const completionPattern = analysis.detectedPatterns.find(p => p.type === 'explicit_completion');\n    \u001b[7m  \u001b[0m \u001b[91m                                                               ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m96\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m96\u001b[0m       const pendingPattern = analysis.detectedPatterns.find(p => p.type === 'task_pending');\n    \u001b[7m  \u001b[0m \u001b[91m                                                            ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m124\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m124\u001b[0m       const errorPattern = analysis.detectedPatterns.find(p => p.type === 'error_needs_fixing');\n    \u001b[7m   \u001b[0m \u001b[91m                                                          ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m145\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m145\u001b[0m       const clarificationPattern = analysis.detectedPatterns.find(p => p.type === 'clarification_needed');\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m164\u001b[0m:\u001b[93m65\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m164\u001b[0m       const improvementPattern = analysis.detectedPatterns.find(p => p.type === 'iterative_improvement');\n    \u001b[7m   \u001b[0m \u001b[91m                                                                ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m182\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m182\u001b[0m       const completionPattern = analysis.detectedPatterns.find(p => p.type === 'explicit_completion');\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m183\u001b[0m       const errorPattern = analysis.detectedPatterns.find(p => p.type === 'error_needs_fixing');\n    \u001b[7m   \u001b[0m \u001b[91m                                                          ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m401\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m401\u001b[0m       const completionPattern = patterns.find(p => p.type === 'explicit_completion');\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m405\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m405\u001b[0m       const errorPattern = patterns.find(p => p.type === 'error_needs_fixing');\n    \u001b[7m   \u001b[0m \u001b[91m                                         ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m409\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m409\u001b[0m       const improvementPattern = patterns.find(p => p.type === 'iterative_improvement');\n    \u001b[7m   \u001b[0m \u001b[91m                                               ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m426\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m426\u001b[0m       const completionPattern = analysis.detectedPatterns.find(p => p.type === 'explicit_completion');\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m430\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m430\u001b[0m       const pendingPattern = analysis.detectedPatterns.find(p => p.type === 'task_pending');\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m434\u001b[0m:\u001b[93m65\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m434\u001b[0m       const improvementPattern = analysis.detectedPatterns.find(p => p.type === 'iterative_improvement');\n    \u001b[7m   \u001b[0m \u001b[91m                                                                ~\u001b[0m\n    \u001b[96mtests/unit/TaskCompletionAnalyzer.test.ts\u001b[0m:\u001b[93m453\u001b[0m:\u001b[93m65\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'p' implicitly has an 'any' type.\n\n    \u001b[7m453\u001b[0m       const improvementPattern = analysis.detectedPatterns.find(p => p.type === 'iterative_improvement');\n    \u001b[7m   \u001b[0m \u001b[91m                                                                ~\u001b[0m\n\nFAIL tests/unit/oauthExtractor.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/oauthExtractor.test.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../services/oauthExtractor' or its corresponding type declarations.\n\n    \u001b[7m1\u001b[0m import { OAuthExtractor, OAuthExtractionResult } from '../services/oauthExtractor';\n    \u001b[7m \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/oauthExtractor.test.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../logger' or its corresponding type declarations.\n\n    \u001b[7m2\u001b[0m import { Logger } from '../logger';\n    \u001b[7m \u001b[0m \u001b[91m                       ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/oauthExtractor.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m85\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module './setup' or its corresponding type declarations.\n\n    \u001b[7m6\u001b[0m import { createTempDir, createMockCredFile, createMockSessionDir, cleanupDir } from './setup';\n    \u001b[7m \u001b[0m \u001b[91m                                                                                    ~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/oauthExtractor.test.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2540: \u001b[0mCannot assign to 'homedir' because it is a read-only property.\n\n    \u001b[7m45\u001b[0m     os.homedir = jest.fn(() => tempDir);\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/oauthExtractor.test.ts\u001b[0m:\u001b[93m59\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2540: \u001b[0mCannot assign to 'homedir' because it is a read-only property.\n\n    \u001b[7m59\u001b[0m     os.homedir = originalHomedir;\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/oauthExtractor.test.ts\u001b[0m:\u001b[93m344\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2540: \u001b[0mCannot assign to 'existsSync' because it is a read-only property.\n\n    \u001b[7m344\u001b[0m       fs.existsSync = jest.fn().mockImplementation(() => {\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/oauthExtractor.test.ts\u001b[0m:\u001b[93m354\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2540: \u001b[0mCannot assign to 'existsSync' because it is a read-only property.\n\n    \u001b[7m354\u001b[0m       fs.existsSync = originalExistsSync;\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/oauthExtractor.test.ts\u001b[0m:\u001b[93m691\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'result' implicitly has an 'any' type.\n\n    \u001b[7m691\u001b[0m       results.forEach(result => {\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n    \u001b[96mtests/unit/oauthExtractor.test.ts\u001b[0m:\u001b[93m697\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'r' implicitly has an 'any' type.\n\n    \u001b[7m697\u001b[0m       expect(results.some(r => r.cached)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                          ~\u001b[0m\n\nFAIL tests/unit/sessionManager.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m89\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../sessionManager' or its corresponding type declarations.\n\n    \u001b[7m4\u001b[0m import { SessionManager, EnhancedSessionManager, SessionState, SessionLimitError } from '../sessionManager';\n    \u001b[7m \u001b[0m \u001b[91m                                                                                        ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../services/sdkClaudeExecutor' or its corresponding type declarations.\n\n    \u001b[7m5\u001b[0m import { SDKClaudeExecutor } from '../services/sdkClaudeExecutor';\n    \u001b[7m \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../logger' or its corresponding type declarations.\n\n    \u001b[7m6\u001b[0m import { Logger } from '../logger';\n    \u001b[7m \u001b[0m \u001b[91m                       ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module './setup' or its corresponding type declarations.\n\n    \u001b[7m7\u001b[0m import { createTempDir, cleanupDir } from './setup';\n    \u001b[7m \u001b[0m \u001b[91m                                          ~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m136\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 's' implicitly has an 'any' type.\n\n    \u001b[7m136\u001b[0m       expect(sessions.map(s => s.id)).toContain(sessionId1);\n    \u001b[7m   \u001b[0m \u001b[91m                          ~\u001b[0m\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m137\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 's' implicitly has an 'any' type.\n\n    \u001b[7m137\u001b[0m       expect(sessions.map(s => s.id)).toContain(sessionId2);\n    \u001b[7m   \u001b[0m \u001b[91m                          ~\u001b[0m\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m229\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'ptyManager'.\n\n    \u001b[7m229\u001b[0m       (ptyManager as any).controllers.set(sessionId, mockController);\n    \u001b[7m   \u001b[0m \u001b[91m       ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m363\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'ptyManager'.\n\n    \u001b[7m363\u001b[0m       (ptyManager as any).controllers.set('orphaned-session', mockController);\n    \u001b[7m   \u001b[0m \u001b[91m       ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m368\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'ptyManager'.\n\n    \u001b[7m368\u001b[0m       expect((ptyManager as any).controllers.has('orphaned-session')).toBe(false);\n    \u001b[7m   \u001b[0m \u001b[91m              ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m398\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'ptyManager'.\n\n    \u001b[7m398\u001b[0m       const createSpy = jest.spyOn(ptyManager, 'createSession');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m399\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'ptyManager'.\n\n    \u001b[7m399\u001b[0m       const closeSpy = jest.spyOn(ptyManager, 'closeSession');\n    \u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sessionManager.test.ts\u001b[0m:\u001b[93m412\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'ptyManager'.\n\n    \u001b[7m412\u001b[0m       jest.spyOn(ptyManager, 'createSession').mockRejectedValue(new Error('PTY failed'));\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~\u001b[0m\n\nFAIL tests/unit/ShutdownManager.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../logger' or its corresponding type declarations.\n\n    \u001b[7m13\u001b[0m import { Logger } from '../logger';\n    \u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m18\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module './ShutdownManager' or its corresponding type declarations.\n\n    \u001b[7m18\u001b[0m } from './ShutdownManager';\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m19\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module './ProcessHandleTracker' or its corresponding type declarations.\n\n    \u001b[7m19\u001b[0m import ProcessHandleTracker from './ProcessHandleTracker';\n    \u001b[7m  \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m86\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'h' implicitly has an 'any' type.\n\n    \u001b[7m86\u001b[0m       expect(hooks.some(h => h.name === 'test-hook-1')).toBe(true);\n    \u001b[7m  \u001b[0m \u001b[91m                        ~\u001b[0m\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m87\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'h' implicitly has an 'any' type.\n\n    \u001b[7m87\u001b[0m       expect(hooks.some(h => h.name === 'test-hook-2')).toBe(true);\n    \u001b[7m  \u001b[0m \u001b[91m                        ~\u001b[0m\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m110\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'h' implicitly has an 'any' type.\n\n    \u001b[7m110\u001b[0m       const dependentHook = hooks.find(h => h.name === 'dependent-hook');\n    \u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'h' implicitly has an 'any' type.\n\n    \u001b[7m121\u001b[0m       expect(shutdownManager.getHooks().some(h => h.id === hookId)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                                             ~\u001b[0m\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m125\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'h' implicitly has an 'any' type.\n\n    \u001b[7m125\u001b[0m       expect(shutdownManager.getHooks().some(h => h.id === hookId)).toBe(false);\n    \u001b[7m   \u001b[0m \u001b[91m                                             ~\u001b[0m\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m137\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'h' implicitly has an 'any' type.\n\n    \u001b[7m137\u001b[0m       const hook = shutdownManager.getHooks().find(h => h.id === hookId);\n    \u001b[7m   \u001b[0m \u001b[91m                                                   ~\u001b[0m\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m219\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\n\n    \u001b[7m219\u001b[0m       expect(result.errors.some(err => err.includes('timed out'))).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~\u001b[0m\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m244\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\n\n    \u001b[7m244\u001b[0m       expect(result.errors.some(err => err.includes('Test hook error'))).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~\u001b[0m\n    \u001b[96mtests/unit/ShutdownManager.test.ts\u001b[0m:\u001b[93m371\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'result' implicitly has an 'any' type.\n\n    \u001b[7m371\u001b[0m       results.forEach(result => {\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\nFAIL tests/unit/SDKAutopilotEngine.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/SDKAutopilotEngine.test.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../logger' or its corresponding type declarations.\n\n    \u001b[7m7\u001b[0m import { Logger } from '../../logger';\n    \u001b[7m \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/SDKAutopilotEngine.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m71\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../core/SDKAutopilotEngine' or its corresponding type declarations.\n\n    \u001b[7m8\u001b[0m import { SDKAutopilotEngine, AutopilotOptions, AutopilotResult } from '../../core/SDKAutopilotEngine';\n    \u001b[7m \u001b[0m \u001b[91m                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/SDKAutopilotEngine.test.ts\u001b[0m:\u001b[93m9\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../services/sdkClaudeExecutor' or its corresponding type declarations.\n\n    \u001b[7m9\u001b[0m import { SDKClaudeExecutor } from '../../services/sdkClaudeExecutor';\n    \u001b[7m \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/SDKAutopilotEngine.test.ts\u001b[0m:\u001b[93m10\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../core/TaskCompletionAnalyzer' or its corresponding type declarations.\n\n    \u001b[7m10\u001b[0m import { TaskCompletionAnalyzer } from '../../core/TaskCompletionAnalyzer';\n    \u001b[7m  \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/SDKAutopilotEngine.test.ts\u001b[0m:\u001b[93m11\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../sessionManager' or its corresponding type declarations.\n\n    \u001b[7m11\u001b[0m import { SessionManager } from '../../sessionManager';\n    \u001b[7m  \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/SDKAutopilotEngine.test.ts\u001b[0m:\u001b[93m12\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../agents/SDKDualAgentCoordinator' or its corresponding type declarations.\n\n    \u001b[7m12\u001b[0m import { SDKDualAgentCoordinator } from '../../agents/SDKDualAgentCoordinator';\n    \u001b[7m  \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/unit/IsolatedTestRunner.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/IsolatedTestRunner.test.ts\u001b[0m:\u001b[93m9\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../logger' or its corresponding type declarations.\n\n    \u001b[7m9\u001b[0m import { Logger } from '../logger';\n    \u001b[7m \u001b[0m \u001b[91m                       ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/IsolatedTestRunner.test.ts\u001b[0m:\u001b[93m14\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module './IsolatedTestRunner' or its corresponding type declarations.\n\n    \u001b[7m14\u001b[0m } from './IsolatedTestRunner';\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/IsolatedTestRunner.test.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module './TestSDKFactory' or its corresponding type declarations.\n\n    \u001b[7m15\u001b[0m import { TestSDKFactory, TestSDKOptions } from './TestSDKFactory';\n    \u001b[7m  \u001b[0m \u001b[91m                                               ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/IsolatedTestRunner.test.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'r' implicitly has an 'any' type.\n\n    \u001b[7m365\u001b[0m       expect(results.every(r => r.success)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                           ~\u001b[0m\n    \u001b[96mtests/unit/IsolatedTestRunner.test.ts\u001b[0m:\u001b[93m368\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'r' implicitly has an 'any' type.\n\n    \u001b[7m368\u001b[0m       const pids = results.map(r => r.testResults?.result?.pid);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~\u001b[0m\n    \u001b[96mtests/unit/IsolatedTestRunner.test.ts\u001b[0m:\u001b[93m397\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'event' implicitly has an 'any' type.\n\n    \u001b[7m397\u001b[0m       testRunner.on('process_ready', (event) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~\u001b[0m\n    \u001b[96mtests/unit/IsolatedTestRunner.test.ts\u001b[0m:\u001b[93m517\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'r' implicitly has an 'any' type.\n\n    \u001b[7m517\u001b[0m       expect(results.every(r => r.success)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                           ~\u001b[0m\n\nFAIL tests/unit/ProcessHandleTracker.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/ProcessHandleTracker.test.ts\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../logger' or its corresponding type declarations.\n\n    \u001b[7m13\u001b[0m import { Logger } from '../../logger';\n    \u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/ProcessHandleTracker.test.ts\u001b[0m:\u001b[93m14\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../testing/TestSDKFactory' or its corresponding type declarations.\n\n    \u001b[7m14\u001b[0m import { TestSDKFactory, TestSDKOptions } from '../../testing/TestSDKFactory';\n    \u001b[7m  \u001b[0m \u001b[91m                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/ProcessHandleTracker.test.ts\u001b[0m:\u001b[93m19\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../testing/ProcessHandleTracker' or its corresponding type declarations.\n\n    \u001b[7m19\u001b[0m } from '../../testing/ProcessHandleTracker';\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/unit/bufferManager.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/bufferManager.test.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m80\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../stream/bufferManager' or its corresponding type declarations.\n\n    \u001b[7m1\u001b[0m import { BufferManager, createBufferManager, MessageType, ParsedMessage } from '../stream/bufferManager';\n    \u001b[7m \u001b[0m \u001b[91m                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/bufferManager.test.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'msg' implicitly has an 'any' type.\n\n    \u001b[7m141\u001b[0m       messages.forEach((msg, index) => {\n    \u001b[7m   \u001b[0m \u001b[91m                        ~~~\u001b[0m\n    \u001b[96mtests/unit/bufferManager.test.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'index' implicitly has an 'any' type.\n\n    \u001b[7m141\u001b[0m       messages.forEach((msg, index) => {\n    \u001b[7m   \u001b[0m \u001b[91m                             ~~~~~\u001b[0m\n    \u001b[96mtests/unit/bufferManager.test.ts\u001b[0m:\u001b[93m517\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'm' implicitly has an 'any' type.\n\n    \u001b[7m517\u001b[0m     const hasToolUse = allMessages.some(m => m.type === 'tool_use');\n    \u001b[7m   \u001b[0m \u001b[91m                                        ~\u001b[0m\n    \u001b[96mtests/unit/bufferManager.test.ts\u001b[0m:\u001b[93m518\u001b[0m:\u001b[93m44\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'm' implicitly has an 'any' type.\n\n    \u001b[7m518\u001b[0m     const hasCompletion = allMessages.some(m => m.metadata?.sessionId);\n    \u001b[7m   \u001b[0m \u001b[91m                                           ~\u001b[0m\n    \u001b[96mtests/unit/bufferManager.test.ts\u001b[0m:\u001b[93m559\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'm' implicitly has an 'any' type.\n\n    \u001b[7m559\u001b[0m     const errorMessages = result.messages.filter(m => m.type === 'error');\n    \u001b[7m   \u001b[0m \u001b[91m                                                 ~\u001b[0m\n    \u001b[96mtests/unit/bufferManager.test.ts\u001b[0m:\u001b[93m560\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'm' implicitly has an 'any' type.\n\n    \u001b[7m560\u001b[0m     const successMessages = result.messages.filter(m =>\n    \u001b[7m   \u001b[0m \u001b[91m                                                   ~\u001b[0m\n\nFAIL tests/unit/sdkValidation.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/sdkValidation.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../logger' or its corresponding type declarations.\n\n    \u001b[7m6\u001b[0m import { Logger } from '../logger';\n    \u001b[7m \u001b[0m \u001b[91m                       ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sdkValidation.test.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../services/sdkClaudeExecutor' or its corresponding type declarations.\n\n    \u001b[7m7\u001b[0m import { SDKClaudeExecutor } from '../services/sdkClaudeExecutor';\n    \u001b[7m \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sdkValidation.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../core/SDKAutopilotEngine' or its corresponding type declarations.\n\n    \u001b[7m8\u001b[0m import { SDKAutopilotEngine } from '../core/SDKAutopilotEngine';\n    \u001b[7m \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sdkValidation.test.ts\u001b[0m:\u001b[93m9\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../core/SimplifiedSessionManager' or its corresponding type declarations.\n\n    \u001b[7m9\u001b[0m import { SimplifiedSessionManager } from '../core/SimplifiedSessionManager';\n    \u001b[7m \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/sdkValidation.test.ts\u001b[0m:\u001b[93m10\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../core/TaskCompletionAnalyzer' or its corresponding type declarations.\n\n    \u001b[7m10\u001b[0m import { TaskCompletionAnalyzer } from '../core/TaskCompletionAnalyzer';\n    \u001b[7m  \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 13 failed, 13 total\nTests:       0 total\nSnapshots:   0 total\nTime:        9.962 s\nRan all test suites.\n",
    "timestamp": "2025-09-03T07:52:06.041Z"
  },
  "integration": null,
  "validation": null,
  "e2e": null,
  "load": null
}